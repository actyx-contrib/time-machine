#!/usr/bin/env node
'use strict'

const build = require('./build')

if (require.main === module) {
  require('yargs')
    .scriptName('timeMachine')
    .usage('$0 <cmd> [args]')
    .command(
      'init [path]',
      'Clones the repository from https://github.com/actyx-contrib/time-machine/ into the given path',
      (yargs) => {
        yargs.option('path', {
          type: 'string',
          default: './time-machine',
          demandOption: 'true',
          describe: 'Path to clone the time-machine repository into',
        })
      },
      function (argv) {
        require('./init').copyTimeMachineSources(argv.path)
      },
    )
    .command(
      'run [path] [fishFile] [fishConstructor]',
      'Generates, builds and runs the time-machine for the given fish',
      (yargs) => {
        yargs
          .option('path', {
            type: 'string',
            demandOption: 'true',
            describe:
              "Path to the time-machine repository. This should be the path which you used with 'init'",
          })
          .option('fishFile', {
            type: 'string',
            demandOption: 'true',
            describe: 'Path to the TypeScript file which includes your fish constructor',
          })
          .option('fishConstructor', {
            type: 'string',
            demandOption: 'true',
            describe: 'The call of your fish Constructor. Eg.: "DefaultFish.of(\'name1\')"',
          })
          .example(
            '$0 run --path ./time-machine --fishFile ./fishes/yourFish --fishConstructor "yourFish.of(\'yourFishName\')"',
          )
      },
      function (argv) {
        build.buildFishFile(argv.path, argv.fishFile, argv.fishConstructor)
        build.runParcelPackaging(argv.path)
      },
    )
    .demandCommand()
    .help().argv
}
